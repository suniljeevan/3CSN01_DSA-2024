package MYPACKAGE;
public class Node {
	int data;
	Node prev;
	Node next;
	Node() {
		data=0;
		prev=null;
		next=null;
	}
	Node(int d) {
		data=d;
		prev=null;
		next=null;
	}

}
--------------------------------------------------------

package MYPACKAGE;
public class DLinkedList {
     Node head;
     DLinkedList() {
    	 head=null;
     }
     void ftraverse() {
    	 System.out.println("Forward traverse");
    	 if(head==null) {
    		 System.out.println("Empty");
    		 return;
    	 }
    	 Node cp=head;
    	 while(cp!=null ) {
    		 System.out.print(cp.data+"->");
    		 cp=cp.next;
    	 }
     }
     void btraverse() {
    	 System.out.println("backward traversal");
    	 if(head==null) {
    		 System.out.println("Empty");
    		 return;
    	 }
    	 Node last=head;
    	 while(last.next!=null) {
    		 last=last.next;
    	 }
    	Node cp=last;
    	while(cp!=null) {
    		System.out.print(cp.data+"->");
    		cp=cp.prev;
    	}
     }
     void insert_at_beg(int d) {
    	 Node nn=new Node(d);
    	 if(head==null) {
    		 head=nn;
    	 }else {
    		 nn.next=head;
    		 head.prev=nn;
    		 head=nn;
    	 }
    	 System.out.println("Inserted at beg");
     }
    void insert_at_last(int d) {
    	Node nn=new Node(d);
    	if(head==null) {
   		 head=nn;
   	 }else {
   		 Node last=head;
   		 while(last.next!=null) {
   			 last=last.next;
   		 }
   		last.next=nn;
   		 nn.prev=last;
   	 }
   	 System.out.println("Inserted at last");
    }
      void insert_at_pos(int d,int p)
    {
    	 Node nn=new Node(d);
        if(p==1||head==null)
        {
            insert_at_beg(d);
        }else {
        	int i=1;
        	Node cp=head;
        	while(i!=p-1) {
        		cp=cp.next;
        		i=i+1;
        	}
        	nn.next=cp.next;
        	cp.next.prev=nn;
        	nn.prev=cp;
        	cp.next=nn;
        }
   System.out.println("Inserted at pos "+p);    
        
    } 
     
}




