package SECOND;
class Stack {
	int size=5;
	char[] S;
	int top=-1;
	Stack() {
		S=new char[size];
	}
	Stack(int s) {
		size=s;
		S=new char[size];
	}
	boolean isFull() {
		if(top>=size-1)
			return true;
		else 
			return false;
	}
	boolean isEmpty() {
		if(top==-1)
			return true;
		else
			return false;
	}
	void Push(char c) {
		if(isFull()) {
			System.out.println("Stack Overflow");
			return;
		}else {
			S[++top]=c;
			System.out.println("Element Pushed");
		}
	}
		char pop() {
			if(isEmpty()) {
				System.out.println("Stack Underflow");
				return '\0';
			}else {
				char popedelement=S[top];
				top--;
				return popedelement;
			}
		}
		void traverse() {
			if(isEmpty() ) {
				System.out.println("No element available");
			}else {
				for(int i=top;i>=0;i--) {
					System.out.println(S[i]);
				}
			}	
}
}
public class TESTCHARACTERSTACK {
	public static void main(String[] args) {
          Stack ob = new Stack();
          ob.Push('a');
          ob.Push('b');
          ob.Push('c');
          System.out.println("Elements in S");
          ob.traverse();
          ob.Push('d');
          ob.Push('e');
          System.out.println("Elements in S");
          ob.traverse();
          ob.Push('f');
          System.out.println("Elements in S");
          ob.traverse();
          char e=ob.pop();
          if(e=='\0')
        	  System.out.println("No element popped");
          else 
         	 System.out.println("poped element is "+e);
          System.out.println("Elements in S");
          ob.traverse();
	}

}
